/* tslint:disable */
/* eslint-disable */
/**
 * FinchAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Allocation,
    AllocationFromJSON,
    AllocationFromJSONTyped,
    AllocationToJSON,
    Event,
    EventFromJSON,
    EventFromJSONTyped,
    EventToJSON,
    Recurring,
    RecurringFromJSON,
    RecurringFromJSONTyped,
    RecurringToJSON,
} from './';

/**
 * 
 * @export
 * @interface PlanUpdatePayload
 */
export interface PlanUpdatePayload {
    /**
     * 
     * @type {string}
     * @memberof PlanUpdatePayload
     */
    name?: string;
    /**
     * 
     * @type {Array<Recurring>}
     * @memberof PlanUpdatePayload
     */
    recurrings?: Array<Recurring>;
    /**
     * 
     * @type {Array<Allocation>}
     * @memberof PlanUpdatePayload
     */
    allocations?: Array<Allocation>;
    /**
     * 
     * @type {Array<Event>}
     * @memberof PlanUpdatePayload
     */
    events?: Array<Event>;
}

export function PlanUpdatePayloadFromJSON(json: any): PlanUpdatePayload {
    return PlanUpdatePayloadFromJSONTyped(json, false);
}

export function PlanUpdatePayloadFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlanUpdatePayload {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'recurrings': !exists(json, 'recurrings') ? undefined : ((json['recurrings'] as Array<any>).map(RecurringFromJSON)),
        'allocations': !exists(json, 'allocations') ? undefined : ((json['allocations'] as Array<any>).map(AllocationFromJSON)),
        'events': !exists(json, 'events') ? undefined : ((json['events'] as Array<any>).map(EventFromJSON)),
    };
}

export function PlanUpdatePayloadToJSON(value?: PlanUpdatePayload | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'recurrings': value.recurrings === undefined ? undefined : ((value.recurrings as Array<any>).map(RecurringToJSON)),
        'allocations': value.allocations === undefined ? undefined : ((value.allocations as Array<any>).map(AllocationToJSON)),
        'events': value.events === undefined ? undefined : ((value.events as Array<any>).map(EventToJSON)),
    };
}


